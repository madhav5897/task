{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CrudService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.apiServer = \"https://devrunner.co.in/machine_test/index.php/web_api/Users\";\n  }\n  add(EmployeeModel) {\n    return this.httpClient.post(this.apiServer + '/Register/', EmployeeModel).subscribe({\n      next: res => {},\n      error: e => console.error(e)\n    });\n  }\n  getAll() {\n    return this.httpClient.get(this.apiServer + '/');\n  }\n  updateinservice(id, EmployeeModel) {\n    return this.httpClient.put(this.apiServer + '/update_user/' + id, EmployeeModel).subscribe({\n      next: res => {},\n      error: e => console.error(e)\n    });\n  }\n  delete(id) {\n    console.log(id);\n    return this.httpClient.delete(this.apiServer + '/remove_user/' + id).subscribe({\n      next: res => {},\n      error: e => console.error(e)\n    });\n  }\n}\nCrudService.ɵfac = function CrudService_Factory(t) {\n  return new (t || CrudService)(i0.ɵɵinject(i1.HttpClient));\n};\nCrudService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CrudService,\n  factory: CrudService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,WAAW;EAItBC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAFtB,cAAS,GAAG,8DAA8D;EAEpC;EAE9CC,GAAG,CAACC,aAAiB;IACnB,OAAO,IAAI,CAACF,UAAU,CAACG,IAAI,CAAgB,IAAI,CAACC,SAAS,GAAG,YAAY,EAACF,aAAa,CAAC,CAAEG,SAAS,CAAC;MACjGC,IAAI,EAAGC,GAAG,IAAI,CACd,CAAC;MACDC,KAAK,EAAGC,CAAC,IAAKC,OAAO,CAACF,KAAK,CAACC,CAAC;KAC9B,CAAC;EACJ;EAIAE,MAAM;IACJ,OAAO,IAAI,CAACX,UAAU,CAACY,GAAG,CAAkB,IAAI,CAACR,SAAS,GAAG,GAAG,CAAC;EACnE;EAEAS,eAAe,CAACC,EAAM,EAAEZ,aAAiB;IACvC,OAAO,IAAI,CAACF,UAAU,CAACe,GAAG,CAAgB,IAAI,CAACX,SAAS,GAAG,eAAe,GAAGU,EAAE,EAAEZ,aAAa,CAAC,CAACG,SAAS,CAAC;MACxGC,IAAI,EAAGC,GAAG,IAAI,CACd,CAAC;MACDC,KAAK,EAAGC,CAAC,IAAKC,OAAO,CAACF,KAAK,CAACC,CAAC;KAC9B,CAAC;EAEJ;EAEAO,MAAM,CAACF,EAAS;IACdJ,OAAO,CAACO,GAAG,CAACH,EAAE,CAAC;IACf,OAAO,IAAI,CAACd,UAAU,CAACgB,MAAM,CAAgB,IAAI,CAACZ,SAAS,GAAG,eAAe,GAAGU,EAAE,CAAC,CAACT,SAAS,CAAC;MAC5FC,IAAI,EAAGC,GAAG,IAAI,CACd,CAAC;MACDC,KAAK,EAAGC,CAAC,IAAKC,OAAO,CAACF,KAAK,CAACC,CAAC;KAC9B,CAAC;EAEJ;;AArCWX,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAoB,SAAXpB,WAAW;EAAAqB,YAFV;AAAM","names":["CrudService","constructor","httpClient","add","EmployeeModel","post","apiServer","subscribe","next","res","error","e","console","getAll","get","updateinservice","id","put","delete","log","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\HP\\Desktop\\madhav\\angular project\\myapp - Copy\\src\\app\\crud.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { EmployeeModel } from './employee-model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CrudService {\n\n  private apiServer = \"https://devrunner.co.in/machine_test/index.php/web_api/Users\";\n\n  constructor(private httpClient: HttpClient) { }\n\n  add(EmployeeModel:any) {\n    return this.httpClient.post<EmployeeModel>(this.apiServer + '/Register/',EmployeeModel) .subscribe({\n      next: (res) => {\n      },\n      error: (e) => console.error(e)\n    });\n  }  \n\n\n\n  getAll(){\n    return this.httpClient.get<EmployeeModel[]>(this.apiServer + '/')\n  }\n\n  updateinservice(id:any, EmployeeModel:any){\n    return this.httpClient.put<EmployeeModel>(this.apiServer + '/update_user/' + id, EmployeeModel).subscribe({\n      next: (res) => {\n      },\n      error: (e) => console.error(e)\n    });\n    \n  }\n\n  delete(id:Number){\n    console.log(id)\n    return this.httpClient.delete<EmployeeModel>(this.apiServer + '/remove_user/' + id).subscribe({\n      next: (res) => {\n      },\n      error: (e) => console.error(e)\n    });\n    \n  }\n  \n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}