{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CrudService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.apiServer = \"https://devrunner.co.in/machine_test/index.php/web_api/Users\";\n  }\n  add(EmployeeModel) {\n    console.log(EmployeeModel.user_gender);\n    var formData = new FormData();\n    formData.append('user_name', EmployeeModel.user_name);\n    formData.append('user_email', EmployeeModel.user_email);\n    formData.append('user_phone_no', EmployeeModel.user_contact_no);\n    formData.append('user_password', EmployeeModel.user_password);\n    return this.httpClient.post(this.apiServer + '/Register', formData).subscribe({\n      next: res => {\n        console.log(res);\n      },\n      error: e => console.error(e)\n    });\n  }\n  login(loginForm) {\n    console.log(loginForm);\n    return this.httpClient.get(this.apiServer + '/login?user_email=' + loginForm.user_email + \"&user_pwd\" + loginForm.user_pw).subscribe({\n      next: res => {\n        console.log(res);\n      },\n      error: e => console.error(e)\n    });\n  }\n  getAll() {\n    return this.httpClient.get(this.apiServer + '/');\n  }\n  updateinservice(id, EmployeeModel) {\n    return this.httpClient.put(this.apiServer + '/update_user/' + id, EmployeeModel).subscribe({\n      next: res => {},\n      error: e => console.error(e)\n    });\n  }\n  delete(id) {\n    var formData1 = new FormData();\n    formData1.append('user_id', id);\n    return this.httpClient.delete(this.apiServer + '/remove_user/', formData1).subscribe({\n      next: res => {\n        console.log(res);\n      },\n      error: e => console.error(e)\n    });\n  }\n}\nCrudService.ɵfac = function CrudService_Factory(t) {\n  return new (t || CrudService)(i0.ɵɵinject(i1.HttpClient));\n};\nCrudService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CrudService,\n  factory: CrudService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,WAAW;EAItBC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAFtB,cAAS,GAAG,8DAA8D;EAEpC;EAE9CC,GAAG,CAACC,aAAiB;IACnBC,OAAO,CAACC,GAAG,CAACF,aAAa,CAACG,WAAW,CAAC;IACtC,IAAIC,QAAQ,GAAQ,IAAIC,QAAQ,EAAE;IAClCD,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAEN,aAAa,CAACO,SAAS,CAAC;IACrDH,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAEN,aAAa,CAACQ,UAAU,CAAC;IACvDJ,QAAQ,CAACE,MAAM,CAAC,eAAe,EAAEN,aAAa,CAACS,eAAe,CAAC;IAC/DL,QAAQ,CAACE,MAAM,CAAC,eAAe,EAAEN,aAAa,CAACU,aAAa,CAAC;IAI7D,OAAO,IAAI,CAACZ,UAAU,CAACa,IAAI,CAAgB,IAAI,CAACC,SAAS,GAAG,WAAW,EAACR,QAAQ,CAAC,CAAES,SAAS,CAAC;MAC3FC,IAAI,EAAGC,GAAG,IAAI;QACZd,OAAO,CAACC,GAAG,CAACa,GAAG,CAAC;MAClB,CAAC;MACDC,KAAK,EAAGC,CAAC,IAAKhB,OAAO,CAACe,KAAK,CAACC,CAAC;KAC9B,CAAC;EACJ;EAGAC,KAAK,CAACC,SAAa;IACjBlB,OAAO,CAACC,GAAG,CAACiB,SAAS,CAAC;IACtB,OAAO,IAAI,CAACrB,UAAU,CAACsB,GAAG,CAAgB,IAAI,CAACR,SAAS,GAAG,oBAAoB,GAACO,SAAS,CAACX,UAAU,GAAC,WAAW,GAACW,SAAS,CAACE,OAAO,CAAC,CAAER,SAAS,CAAC;MAC7IC,IAAI,EAAGC,GAAG,IAAI;QACZd,OAAO,CAACC,GAAG,CAACa,GAAG,CAAC;MAClB,CAAC;MACDC,KAAK,EAAGC,CAAC,IAAKhB,OAAO,CAACe,KAAK,CAACC,CAAC;KAC9B,CAAC;EAEJ;EAIAK,MAAM;IACJ,OAAO,IAAI,CAACxB,UAAU,CAACsB,GAAG,CAAkB,IAAI,CAACR,SAAS,GAAG,GAAG,CAAC;EACnE;EAEAW,eAAe,CAACC,EAAM,EAAExB,aAAiB;IACvC,OAAO,IAAI,CAACF,UAAU,CAAC2B,GAAG,CAAgB,IAAI,CAACb,SAAS,GAAG,eAAe,GAAGY,EAAE,EAAExB,aAAa,CAAC,CAACa,SAAS,CAAC;MACxGC,IAAI,EAAGC,GAAG,IAAI,CACd,CAAC;MACDC,KAAK,EAAGC,CAAC,IAAKhB,OAAO,CAACe,KAAK,CAACC,CAAC;KAC9B,CAAC;EAEJ;EAEAS,MAAM,CAACF,EAAS;IAEd,IAAIG,SAAS,GAAQ,IAAItB,QAAQ,EAAE;IACnCsB,SAAS,CAACrB,MAAM,CAAC,SAAS,EAAEkB,EAAE,CAAC;IAG/B,OAAO,IAAI,CAAC1B,UAAU,CAAC4B,MAAM,CAAgB,IAAI,CAACd,SAAS,GAAG,eAAe,EAAGe,SAAS,CAAC,CAACd,SAAS,CAAC;MACnGC,IAAI,EAAGC,GAAG,IAAI;QACZd,OAAO,CAACC,GAAG,CAACa,GAAG,CAAC;MAClB,CAAC;MACDC,KAAK,EAAGC,CAAC,IAAKhB,OAAO,CAACe,KAAK,CAACC,CAAC;KAC9B,CAAC;EAEJ;;AAhEWrB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAgC,SAAXhC,WAAW;EAAAiC,YAFV;AAAM","names":["CrudService","constructor","httpClient","add","EmployeeModel","console","log","user_gender","formData","FormData","append","user_name","user_email","user_contact_no","user_password","post","apiServer","subscribe","next","res","error","e","login","loginForm","get","user_pw","getAll","updateinservice","id","put","delete","formData1","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\HP\\Desktop\\madhav\\angular project\\myapp - Copy\\src\\app\\crud.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { EmployeeModel } from './employee-model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CrudService {\n\n  private apiServer = \"https://devrunner.co.in/machine_test/index.php/web_api/Users\";\n\n  constructor(private httpClient: HttpClient) { }\n\n  add(EmployeeModel:any) {\n    console.log(EmployeeModel.user_gender)\n    var formData: any = new FormData();\n    formData.append('user_name', EmployeeModel.user_name);\n    formData.append('user_email', EmployeeModel.user_email);\n    formData.append('user_phone_no', EmployeeModel.user_contact_no);\n    formData.append('user_password', EmployeeModel.user_password);\n\n\n\n    return this.httpClient.post<EmployeeModel>(this.apiServer + '/Register',formData) .subscribe({\n      next: (res) => {\n        console.log(res)\n      },\n      error: (e) => console.error(e)\n    });\n  }  \n\n\n  login(loginForm:any){\n    console.log(loginForm)\n    return this.httpClient.get<EmployeeModel>(this.apiServer + '/login?user_email='+loginForm.user_email+\"&user_pwd\"+loginForm.user_pw) .subscribe({\n      next: (res) => {\n        console.log(res)\n      },\n      error: (e) => console.error(e)\n    });\n\n  }\n\n\n\n  getAll(){\n    return this.httpClient.get<EmployeeModel[]>(this.apiServer + '/')\n  }\n\n  updateinservice(id:any, EmployeeModel:any){\n    return this.httpClient.put<EmployeeModel>(this.apiServer + '/update_user/' + id, EmployeeModel).subscribe({\n      next: (res) => {\n      },\n      error: (e) => console.error(e)\n    });\n    \n  }\n\n  delete(id:string){\n\n    var formData1: any = new FormData();\n    formData1.append('user_id', id);\n\n\n    return this.httpClient.delete<EmployeeModel>(this.apiServer + '/remove_user/' , formData1).subscribe({\n      next: (res) => {\n        console.log(res)\n      },\n      error: (e) => console.error(e)\n    });\n    \n  }\n  \n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}