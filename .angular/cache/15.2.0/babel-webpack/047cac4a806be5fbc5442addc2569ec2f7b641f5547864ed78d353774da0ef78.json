{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CrudService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.apiServer = \"http://localhost:3000\";\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n  }\n  create(EmployeeModel) {\n    return this.httpClient.post(this.apiServer + '/EmployeeModels/', JSON.stringify(EmployeeModel), this.httpOptions);\n  }\n  getById(id) {\n    return this.httpClient.get(this.apiServer + '/Employees/' + id);\n  }\n  getAll() {\n    return this.httpClient.get(this.apiServer + '/Employees/');\n  }\n  update(id, EmployeeModel) {\n    return this.httpClient.put(this.apiServer + '/Employees/' + id, JSON.stringify(EmployeeModel), this.httpOptions);\n  }\n  delete(id) {\n    return this.httpClient.delete(this.apiServer + '/Employees/' + id, this.httpOptions);\n  }\n}\nCrudService.ɵfac = function CrudService_Factory(t) {\n  return new (t || CrudService)(i0.ɵɵinject(i1.HttpClient));\n};\nCrudService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CrudService,\n  factory: CrudService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAM9D,OAAM,MAAOC,WAAW;EAQtBC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IANtB,cAAS,GAAG,uBAAuB;IAC3C,gBAAW,GAAG;MACZC,OAAO,EAAE,IAAIJ,WAAW,CAAC;QACvB,cAAc,EAAE;OACjB;KACF;EAC6C;EAE9CK,MAAM,CAACC,aAAiB;IACtB,OAAO,IAAI,CAACH,UAAU,CAACI,IAAI,CAAgB,IAAI,CAACC,SAAS,GAAG,kBAAkB,EAAEC,IAAI,CAACC,SAAS,CAACJ,aAAa,CAAC,EAAE,IAAI,CAACK,WAAW,CAAC;EAClI;EAGAC,OAAO,CAACC,EAAM;IACZ,OAAO,IAAI,CAACV,UAAU,CAACW,GAAG,CAAgB,IAAI,CAACN,SAAS,GAAG,aAAa,GAAGK,EAAE,CAAC;EAChF;EAEAE,MAAM;IACJ,OAAO,IAAI,CAACZ,UAAU,CAACW,GAAG,CAAkB,IAAI,CAACN,SAAS,GAAG,aAAa,CAAC;EAC7E;EAEAQ,MAAM,CAACH,EAAM,EAAEP,aAAiB;IAC9B,OAAO,IAAI,CAACH,UAAU,CAACc,GAAG,CAAgB,IAAI,CAACT,SAAS,GAAG,aAAa,GAAGK,EAAE,EAAEJ,IAAI,CAACC,SAAS,CAACJ,aAAa,CAAC,EAAE,IAAI,CAACK,WAAW,CAAC;EACjI;EAEAO,MAAM,CAACL,EAAM;IACX,OAAO,IAAI,CAACV,UAAU,CAACe,MAAM,CAAgB,IAAI,CAACV,SAAS,GAAG,aAAa,GAAGK,EAAE,EAAE,IAAI,CAACF,WAAW,CAAC;EAErG;;AA9BWV,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAkB,SAAXlB,WAAW;EAAAmB,YAFV;AAAM","names":["HttpHeaders","CrudService","constructor","httpClient","headers","create","EmployeeModel","post","apiServer","JSON","stringify","httpOptions","getById","id","get","getAll","update","put","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\HP\\Desktop\\madhav\\angular project\\myapp\\src\\app\\crud.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { EmployeeModel } from './employee-model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CrudService {\n\n  private apiServer = \"http://localhost:3000\";\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  }\n  constructor(private httpClient: HttpClient) { }\n\n  create(EmployeeModel:any) {\n    return this.httpClient.post<EmployeeModel>(this.apiServer + '/EmployeeModels/', JSON.stringify(EmployeeModel), this.httpOptions)\n  }  \n\n\n  getById(id:any){\n    return this.httpClient.get<EmployeeModel>(this.apiServer + '/Employees/' + id)\n  }\n\n  getAll(){\n    return this.httpClient.get<EmployeeModel[]>(this.apiServer + '/Employees/')\n  }\n\n  update(id:any, EmployeeModel:any){\n    return this.httpClient.put<EmployeeModel>(this.apiServer + '/Employees/' + id, JSON.stringify(EmployeeModel), this.httpOptions)\n  }\n\n  delete(id:any){\n    return this.httpClient.delete<EmployeeModel>(this.apiServer + '/Employees/' + id, this.httpOptions)\n    \n  }\n  \n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}