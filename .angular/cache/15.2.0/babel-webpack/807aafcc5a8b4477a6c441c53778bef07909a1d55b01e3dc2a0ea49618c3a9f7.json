{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CrudService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.apiServer = \"http://localhost:3000\";\n  }\n  add(EmployeeModel) {\n    return this.httpClient.post(this.apiServer + '/Employees/', EmployeeModel).subscribe({\n      next: res => {\n        console.log(res);\n      },\n      error: e => console.error(e)\n    });\n  }\n  getById(id) {\n    return this.httpClient.get(this.apiServer + '/Employees/' + id);\n  }\n  getAll() {\n    return this.httpClient.get(this.apiServer + '/Employees/');\n  }\n  updateinservice(id, EmployeeModel) {\n    return this.httpClient.put(this.apiServer + '/Employees/' + id, EmployeeModel);\n  }\n  delete(id) {\n    return this.httpClient.delete(this.apiServer + '/Employees/' + id);\n  }\n}\nCrudService.ɵfac = function CrudService_Factory(t) {\n  return new (t || CrudService)(i0.ɵɵinject(i1.HttpClient));\n};\nCrudService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CrudService,\n  factory: CrudService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,WAAW;EAItBC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAFtB,cAAS,GAAG,uBAAuB;EAEG;EAE9CC,GAAG,CAACC,aAAiB;IACnB,OAAO,IAAI,CAACF,UAAU,CAACG,IAAI,CAAgB,IAAI,CAACC,SAAS,GAAG,aAAa,EAACF,aAAa,CAAC,CAAEG,SAAS,CAAC;MAClGC,IAAI,EAAGC,GAAG,IAAI;QACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAClB,CAAC;MACDG,KAAK,EAAGC,CAAC,IAAKH,OAAO,CAACE,KAAK,CAACC,CAAC;KAC9B,CAAC;EACJ;EAGAC,OAAO,CAACC,EAAM;IACZ,OAAO,IAAI,CAACb,UAAU,CAACc,GAAG,CAAgB,IAAI,CAACV,SAAS,GAAG,aAAa,GAAGS,EAAE,CAAC;EAChF;EAEAE,MAAM;IACJ,OAAO,IAAI,CAACf,UAAU,CAACc,GAAG,CAAkB,IAAI,CAACV,SAAS,GAAG,aAAa,CAAC;EAC7E;EAEAY,eAAe,CAACH,EAAM,EAAEX,aAAiB;IACvC,OAAO,IAAI,CAACF,UAAU,CAACiB,GAAG,CAAgB,IAAI,CAACb,SAAS,GAAG,aAAa,GAAGS,EAAE,EAAEX,aAAa,CAAC;EAE/F;EAEAgB,MAAM,CAACL,EAAM;IACX,OAAO,IAAI,CAACb,UAAU,CAACkB,MAAM,CAAgB,IAAI,CAACd,SAAS,GAAG,aAAa,GAAGS,EAAE,CAAC;EAEnF;;AAhCWf,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAqB,SAAXrB,WAAW;EAAAsB,YAFV;AAAM","names":["CrudService","constructor","httpClient","add","EmployeeModel","post","apiServer","subscribe","next","res","console","log","error","e","getById","id","get","getAll","updateinservice","put","delete","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\HP\\Desktop\\madhav\\angular project\\myapp\\src\\app\\crud.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { EmployeeModel } from './employee-model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CrudService {\n\n  private apiServer = \"http://localhost:3000\";\n\n  constructor(private httpClient: HttpClient) { }\n\n  add(EmployeeModel:any) {\n    return this.httpClient.post<EmployeeModel>(this.apiServer + '/Employees/',EmployeeModel) .subscribe({\n      next: (res) => {\n        console.log(res);\n      },\n      error: (e) => console.error(e)\n    });\n  }  \n\n\n  getById(id:any){\n    return this.httpClient.get<EmployeeModel>(this.apiServer + '/Employees/' + id);\n  }\n\n  getAll(){\n    return this.httpClient.get<EmployeeModel[]>(this.apiServer + '/Employees/');\n  }\n\n  updateinservice(id:any, EmployeeModel:any){\n    return this.httpClient.put<EmployeeModel>(this.apiServer + '/Employees/' + id, EmployeeModel)\n    \n  }\n\n  delete(id:any){\n    return this.httpClient.delete<EmployeeModel>(this.apiServer + '/Employees/' + id)\n    \n  }\n  \n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}