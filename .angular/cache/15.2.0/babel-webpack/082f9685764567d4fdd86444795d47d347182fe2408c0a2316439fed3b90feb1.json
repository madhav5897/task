{"ast":null,"code":"import { FormGroup, FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./crud.service\";\nexport class AppComponent {\n  constructor(crudService) {\n    this.crudService = crudService;\n    this.title = 'myapp';\n    this.editemployee = false;\n    this.noteditemployee = true;\n    this.employeeForm = new FormGroup({\n      user_name: new FormControl(),\n      user_email: new FormControl(),\n      user_contact_no: new FormControl(),\n      user_password: new FormControl(),\n      user_gender: new FormControl()\n    });\n    this.employeeData = [];\n    this.getAll();\n  }\n  ngOnInIt() {}\n  submitForm() {\n    this.crudService.add(this.employeeForm.value);\n    this.getAll();\n    this.employeeForm.reset();\n  }\n  getAll() {\n    this.crudService.getAll().subscribe(response => {\n      this.employeeData = response;\n      console.log(this.employeeData.data);\n    }, error => {\n      console.log(error);\n    });\n  }\n  cancel() {\n    this.user_name = \"\";\n    this.user_email = \"\";\n    this.user_contact_no = \"\";\n    this.user_password = '';\n    this.user_gender = \"\";\n  }\n  edit(employee) {\n    this.editemployee = true;\n    this.noteditemployee = false;\n    this.user_name = employee.user_name;\n    this.user_email = employee.user_email;\n    this.user_contact_no = employee.user_phone_no;\n    this.user_gender = employee.user_gender;\n    this.user_password = employee.user_pwd;\n  }\n  update() {\n    this.crudService.updateinservice(this.idselected, this.employeeForm.value);\n    this.getAll();\n    this.editemployee = false;\n    this.noteditemployee = true;\n  }\n  delete(employee) {\n    this.crudService.delete(employee.user_id);\n    this.getAll();\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.CrudService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 1,\n  vars: 0,\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"html\");\n    }\n  },\n  styles: [\".button[_ngcontent-%COMP%]{\\r\\n    height: 50px;\\r\\n    width:80px\\r\\n}\\r\\n.alert[_ngcontent-%COMP%]{\\r\\n    color: red;\\r\\n}\\r\\n.head[_ngcontent-%COMP%]{\\r\\n    height: 40px;\\r\\n    width:70%;\\r\\n    background-color:brown ;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0lBQ1o7QUFDSjtBQUNBO0lBQ0ksVUFBVTtBQUNkO0FBQ0E7SUFDSSxZQUFZO0lBQ1osU0FBUztJQUNULHVCQUF1QjtBQUMzQiIsInNvdXJjZXNDb250ZW50IjpbIi5idXR0b257XHJcbiAgICBoZWlnaHQ6IDUwcHg7XHJcbiAgICB3aWR0aDo4MHB4XHJcbn1cclxuLmFsZXJ0e1xyXG4gICAgY29sb3I6IHJlZDtcclxufVxyXG4uaGVhZHtcclxuICAgIGhlaWdodDogNDBweDtcclxuICAgIHdpZHRoOjcwJTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6YnJvd24gO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,SAAS,EAAEC,WAAW,QAAoB,gBAAgB;;;AAQnE,OAAM,MAAOC,YAAY;EA0BvBC,YAAmBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAzB9B,UAAK,GAAG,OAAO;IAEf,iBAAY,GAAY,KAAK;IAC7B,oBAAe,GAAY,IAAI;IAW/B,iBAAY,GAAG,IAAIJ,SAAS,CAAC;MAC3BK,SAAS,EAAE,IAAIJ,WAAW,EAAE;MAC5BK,UAAU,EAAE,IAAIL,WAAW,EAAE;MAC7BM,eAAe,EAAE,IAAIN,WAAW,EAAE;MAClCO,aAAa,EAAE,IAAIP,WAAW,EAAE;MAChCQ,WAAW,EAAE,IAAIR,WAAW;KAC7B,CAAC;IAEF,iBAAY,GAAQ,EAAE;IAKpB,IAAI,CAACS,MAAM,EAAE;EACf;EAEAC,QAAQ,IACR;EAEAC,UAAU;IAER,IAAI,CAACR,WAAW,CAACS,GAAG,CAAC,IAAI,CAACC,YAAY,CAACC,KAAK,CAAC;IAC5C,IAAI,CAACL,MAAM,EAAE;IACd,IAAI,CAACI,YAAY,CAACE,KAAK,EAAE;EAE3B;EAIAN,MAAM;IACJ,IAAI,CAACN,WAAW,CAACM,MAAM,EAAE,CAACO,SAAS,CACjCC,QAAQ,IAAG;MAEjB,IAAI,CAACC,YAAY,GAACD,QAAQ;MAC1BE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,YAAY,CAACG,IAAI,CAAC;IAE7B,CAAC,EACDC,KAAK,IAAG;MACNH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IACpB,CAAC,CAAC;EACN;EAEAC,MAAM;IACJ,IAAI,CAACnB,SAAS,GAAG,EAAE;IACnB,IAAI,CAACC,UAAU,GAAG,EAAE;IACpB,IAAI,CAACC,eAAe,GAAG,EAAE;IACzB,IAAI,CAACC,aAAa,GAAG,EAAE;IACvB,IAAI,CAACC,WAAW,GAAG,EAAE;EAEvB;EAEAgB,IAAI,CAACC,QAAa;IAChB,IAAI,CAACC,YAAY,GAAG,IAAI;IACxB,IAAI,CAACC,eAAe,GAAG,KAAK;IAE5B,IAAI,CAACvB,SAAS,GAAGqB,QAAQ,CAACrB,SAAS;IACnC,IAAI,CAACC,UAAU,GAAGoB,QAAQ,CAACpB,UAAU;IACrC,IAAI,CAACC,eAAe,GAAGmB,QAAQ,CAACG,aAAa;IAC7C,IAAI,CAACpB,WAAW,GAAGiB,QAAQ,CAACjB,WAAW;IACvC,IAAI,CAACD,aAAa,GAAGkB,QAAQ,CAACI,QAAQ;EACxC;EAEAC,MAAM;IACJ,IAAI,CAAC3B,WAAW,CAAC4B,eAAe,CAAC,IAAI,CAACC,UAAU,EAAE,IAAI,CAACnB,YAAY,CAACC,KAAK,CAAC;IAC1E,IAAI,CAACL,MAAM,EAAE;IACb,IAAI,CAACiB,YAAY,GAAG,KAAK;IACzB,IAAI,CAACC,eAAe,GAAG,IAAI;EAC7B;EAEAM,MAAM,CAACR,QAAa;IAElB,IAAI,CAACtB,WAAW,CAAC8B,MAAM,CAACR,QAAQ,CAACS,OAAO,CAAC;IACzC,IAAI,CAACzB,MAAM,EAAE;EACf;;AAxFWR,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAkC;EAAAC;EAAAC;EAAAC;IAAA;MCTzBC,uBAiGO","names":["FormGroup","FormControl","AppComponent","constructor","crudService","user_name","user_email","user_contact_no","user_password","user_gender","getAll","ngOnInIt","submitForm","add","employeeForm","value","reset","subscribe","response","employeeData","console","log","data","error","cancel","edit","employee","editemployee","noteditemployee","user_phone_no","user_pwd","update","updateinservice","idselected","delete","user_id","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["C:\\Users\\HP\\Desktop\\madhav\\angular project\\myapp - Copy\\src\\app\\app.component.ts","C:\\Users\\HP\\Desktop\\madhav\\angular project\\myapp - Copy\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { CrudService } from './crud.service';\nimport { EmployeeModel } from './employee-model';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'myapp';\n\n  editemployee: boolean = false;\n  noteditemployee: boolean = true;\n\n  user_name: string;\n  user_email: string;\n  user_contact_no: string;\n  user_password: string;\n  user_gender: string;\n\n\n  employeeModelObj: EmployeeModel;\n\n  employeeForm = new FormGroup({\n    user_name: new FormControl(),\n    user_email: new FormControl(),\n    user_contact_no: new FormControl(),\n    user_password: new FormControl(),\n    user_gender: new FormControl(),\n  });\n\n  employeeData: any = [];\n  idselected: any;\n\n  constructor(public crudService: CrudService) {\n\n    this.getAll();\n  }\n\n  ngOnInIt() {\n  }\n\n  submitForm() {\n\n    this.crudService.add(this.employeeForm.value)\n     this.getAll();\n    this.employeeForm.reset()\n\n  }\n\n\n\n  getAll() {\n    this.crudService.getAll().subscribe(\n      response => {\n        \nthis.employeeData=response;\nconsole.log(this.employeeData.data)\n\n      },\n      error => {\n        console.log(error);\n      });\n  }\n\n  cancel() {\n    this.user_name = \"\";\n    this.user_email = \"\";\n    this.user_contact_no = \"\";\n    this.user_password = '';\n    this.user_gender = \"\";\n\n  }\n\n  edit(employee: any) {\n    this.editemployee = true;\n    this.noteditemployee = false;\n\n    this.user_name = employee.user_name;\n    this.user_email = employee.user_email;\n    this.user_contact_no = employee.user_phone_no;\n    this.user_gender = employee.user_gender;\n    this.user_password = employee.user_pwd;\n  }\n\n  update() {\n    this.crudService.updateinservice(this.idselected, this.employeeForm.value)\n    this.getAll();\n    this.editemployee = false;\n    this.noteditemployee = true;\n  }\n\n  delete(employee: any) {\n\n    this.crudService.delete(employee.user_id);\n    this.getAll()\n  }\n\n}\n","<html>\n\n<!-- <head>\n  <title>Reactive form example\n  </title>\n</head>\n\n<body>\n  <div>\n    <h4> Reactive form example</h4>\n<br>\n    <form [formGroup]=\"employeeForm\" (ngSubmit)=\"submitForm()\">\n      <div>\n        <label for=\"user_name\">Username</label>\n        <input type=\"text\" class=\"form-control\" formControlName=\"user_name\" [(ngModel)]=\"user_name\" >\n      </div>\n<br>\n      <div>\n        <label for=\"user_email\">Email</label>\n        <input type=\"text\" class=\"form-control\" formControlName=\"user_email\" [(ngModel)]=\"user_email\">\n      </div>\n  <br>\n      <div>\n        <label for=\"Email\">Contact No</label>\n        <input type=\"text\" class=\"form-control\" formControlName=\"user_contact_no\" [(ngModel)]=\"user_contact_no\">\n      </div>\n\n<br>\n      <div>\n        <label for=\"phone\">Password</label>\n        <input type=\"text\" class=\"form-control\" formControlName=\"user_password\" [(ngModel)]=\"user_password\">\n      </div>\n<br>\n\n      <br>\n      <div>\n        <span>Gender</span>\n        <br>\n        <div>\n          <input type=\"radio\" class=\"form-control\" value=\"male\" name=\"gender\" [(ngModel)]=\"user_gender\">\n            <label for=\"male\">Male</label>\n        </div>\n        <div>\n            <input type=\"radio\" class=\"form-control\" name=\"gender\" [(ngModel)]=\"user_gender\" value=\"female\">\n            <label for=\"female\">Female</label>\n        </div>\n        <br>\n      </div>\n\n\n\n      <br>\n      <div class=\"action\" *ngIf=\"editemployee\">\n        <button class=\"button\" type=\"submit\">Update</button>\n      </div>\n\n\n      <div class=\"action\" *ngIf=\"noteditemployee\">\n        <button class=\"button\" type=\"submit\">Register</button>\n      </div>\n    </form>\n    <br>\n    <button class=\"button\" (click)=\"cancel()\">cancel</button>\n\n\n    <br>\n    <br>\n    <table class=\"list\" id=\"list\">\n      <thead>\n\n        <tr class=\"head\">\n          <th>Username</th>\n          <th>Email</th>\n          <th>Contact No</th>\n          <th>Gender</th>\n          <th>action</th>\n\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let  employee of employeeData.data\">\n\n          <td>{{employee.user_name}}</td>\n          <td>{{employee.user_email}}</td>\n          <td>{{employee.user_phone_no}}</td>\n          <td>{{employee.user_gender}}</td>\n          <td><button (click)=\"edit(employee)\">Edit</button>\n          <button (click)=\"delete(employee)\">Delete</button></td>\n        </tr>\n\n      </tbody>\n    </table>\n\n\n  </div>\n</body> -->\n\n</html>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}